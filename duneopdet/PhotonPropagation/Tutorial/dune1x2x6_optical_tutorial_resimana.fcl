#include "services_dune.fcl"
#include "singles_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "mccheatermodules.fcl"
#include "photpropservices_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "opticaldetectorservices_dune.fcl"
#include "FlashMatchAna.fcl"


process_name: OpticalResimAna

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "dune1x2x6_optical_tutorial_resimana_hist.root" }
  TimeTracker:       {}
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_info
  @table::dunefd_simulation_services
}

# DUNE FD 1x2x6 workspace geometry
services.Geometry:                @local::dune10kt_1x2x6_geo
services.PhotonVisibilityService: @local::dune10kt_1x2x6_photonvisibilityservice

source:
{
  module_type: RootInput
  maxEvents:  -1        # Run over all events
  #specify from command line with -s or --source
   
}


physics:
{

   # Run both analyzers we've looked at
   analyzers:
   {
      opflashana:  @local::dunefd_opflashana
      flashmatch:  @local::marley_flashmatchana
   }
   
   analyzeIt:  [ opflashana, flashmatch ]
   
   end_paths:     [ analyzeIt ]  
}
