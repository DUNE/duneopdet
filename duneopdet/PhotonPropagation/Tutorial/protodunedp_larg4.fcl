#include "services_dune.fcl"
#include "singles_dune.fcl"
#include "largeantmodules_dune.fcl"
#include "detsimmodules_dune.fcl"
#include "mccheatermodules.fcl"
#include "photpropservices_dune.fcl"
#include "opticaldetectormodules_dune.fcl"
#include "opticaldetectorservices_dune.fcl"


process_name: test

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "protodunedp_larg4_hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:      @local::standard_info

  @table::protodunedphase_simulation_services

    DetectorHolder: {}
    ActionHolder: {}
    PhysicsListHolder: {} 
    PhysicsList: { 
	PhysicsListName: "FTFP_BERT"
	DumpList: false	
  	enableCerenkov: false
  	enableScintillation: true
	ScintillationByParticleType: true
  	enableAbsorption: false   
  	enableRayleigh: false     
  	enableMieHG: false     
  	enableBoundary: false    
  	enableWLS: false
   }
    LArG4Detector : 
    {
      category: "world"
      gdmlFileName_ : "protodunedphase_nowires.gdml"
    }
   MCTruthEventAction: {service_type: "MCTruthEventActionService"}
   ParticleListAction:{service_type: "ParticleListActionService"}
   #PhotonVisibilityServiceS2: @local::dunedphase3x1x1_photonvisibilityserviceS2
   
}

services.Geometry:                @local::protodunedphase_geo
PhotonVisibilityService: @local::protodunedp_photonvisibilityservice
services.PhotonVisibilityService.ParametrisedTimePropagation: false

#services.PhotonVisibilityServiceS2.LibraryFile: "../S2_tests/libext_dunedphase3x1x1_lightsim_S2_20171213.root"
#services.PhotonVisibilityServiceS2.ParametrisedTimePropagation: true

services.LArG4Parameters.UseLitePhotons: true
services.LArPropertiesService.ScintFastTimeConst: 6 #default decay time in ns
#services.LArPropertiesService.ScintSlowTimeConst: 1590 #default decay time in ns
services.OpDetResponseInterface.QuantumEfficiency: 1
services.LArPropertiesService.ScintPreScale: 1 
services.PhotonVisibilityService.Interpolate: true
services.PhotonVisibilityService.ParametrisedTimePropagation: false


source:
{
  module_type: EmptyEvent
  timestampPlugin: { plugin_type: "GeneratedEventTimestamp" }
  maxEvents:   1          # Number of events to create
  firstRun:    1           # Run number to use for this file
  firstEvent:  1           # number of first event in the file
}

physics:
{

 producers:
 {
   generator: @local::dunefd_singlep

   larg4Main: { module_type: "larg4Main"
               enableVisualization: false
               macroPath: ".:./macros"
               visMacro: "vis.mac"
              }

#  elecDrift:  { module_type:            "SimDriftElectrons"
#		 SimulationLabel:        "larg4Main:LArG4DetectorServicevolTPCActive"
#		 StoreDriftedElectronClusters: true
#              }

   photonProp:  { module_type:      "PhotonLibraryPropagation"
		  RiseTimeFast: 0 #default parameter in ns
		  RiseTimeSlow: 0 #default parameter in ns
		  DoSlowComponent:  false
		  EDepModuleLabels: ["larg4Main:LArG4DetectorServicevolTPCActive"] }

#   photonPropS2:{ module_type:      "PhotonLibraryPropagationS2"
#   		  Gain: 300
#   	 	  DriftEModuleLabel: "elecDrift"
#   		}

   rns:       { module_type: "RandomNumberSaver" }
 }
 analyzers:
 {
   pmtresponse: #@local::standard_simphotoncounter
	{
	  module_type:            "SimPhotonCounter"
	  Verbosity:               3 
//	  InputModule:            ["photonProp","photonPropS2"]
	  InputModule:            "photonProp" 
	  MakeAllPhotonsTree:      true
	  MakeDetectedPhotonsTree: true
	  MakeOpDetsTree:          true
	  MakeOpDetEventsTree:     true
	}


 }

#simulate: [  rns, generator, larg4Main, elecDrift, photonProp, photonPropS2 ] 

simulate: [  rns, generator, larg4Main, photonProp ] 

 stream1:  [ pmtresponse ]
 trigger_paths: [simulate] 
 end_paths:     [stream1]  
}

physics.producers.generator.Theta0XZ: [ 0 ]
physics.producers.generator.Theta0YZ: [ 0 ]

physics.producers.generator.X0:     [ 0.01 ] 
physics.producers.generator.Y0:     [  0.01 ] 
physics.producers.generator.Z0:     [   0.01 ] 

physics.producers.generator.P0: [ 3 ] # momentum in GeV/c
physics.producers.generator.PDG: [ 13 ] 


outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "protodunedp_larg4_gen.root" #default file name, can override from command line with -o or --output
 }
}


