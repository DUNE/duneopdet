#include "deconvolution_run.fcl"

process_name: RecoDeconv

services:
{
   # Load the service that manages root files for histograms.
   TFileService: { fileName: "deconv_hist.root" }
   RandomNumberGenerator: {} #ART native random number generator
   message:      @local::standard_info
   @table::protodunehd_services
}

physics.simulate: @erase
physics.reco: [ opdec, rns ]
physics.trigger_paths: [ reco ]


physics.producers.opdec: {
   @table::protodunehd_deconvolution

   Pedestal: 8180
   PreTrigger: 50
   PedestalBuffer: 30
   InputModule: "pdhddaphne"
   InstanceName: "daq"

   # PD HD raw waveforms have negative polarity
   InputPolarity: -1


   LineNoiseRMS: 4.5


   ApplyPostfilter: true
   WfmPostfilter: {
      @table::protodunehd_deconvolution.WfmPostfilter
      Cutoff: 1.5
   }
   ApplyPostBLCorrection: true
}

physics.analyzers.opdecoana.InputModuleDeco: "opdec"
physics.analyzers.opdecoana.InputModuleDigi: "pdhddaphne"
physics.analyzers.opdecoana.InstanceNameDeco: ""
physics.analyzers.opdecoana.InstanceNameDigi: "daq"


#physics.end_paths: [stream1]